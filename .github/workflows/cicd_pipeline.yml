name: cicd-pipeline

on: [push]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ["3.8"]

    steps:
      - uses: actions/checkout@v2

      - name: Set up Python ${{ matrix.python-version }}
        uses: actions/setup-python@v2
        with:
          python-version: ${{ matrix.python-version }}

      - name: Install Python dependencies
        run: |
          python -m pip install --upgrade pip
          if [ -f requirements.txt ]; then pip install -r requirements.txt -qqq; fi

      - name: Auto-format with black
        uses: psf/black@stable

      - name: Lint with flake8
        run: |
          pip install flake8 -qqq
          # stop the build if there are Python syntax errors or undefined names
          flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
          # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
          flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

      - name: Test app with pytest
        run: |
          pytest

      - name: Set up QEMU for docker build
        uses: docker/setup-qemu-action@v1
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1

      - name: Configure DockerHub credentials
        uses: docker/login-action@v1
        with:
          username: ${{secrets.DOCKERHUB_USERNAME}}
          password: ${{secrets.DOCKERHUB_TOKEN}}

      - name: Build Dockerfile and push to DockerHub
        uses: docker/build-push-action@v2
        with:
          push: true
          tags: kaihulme/nestpi:latest

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{secrets.AWS_ACCESS_KEY_ID}}
          aws-secret-access-key: ${{secrets.AWS_SECRET_ACCESS_KEY}}
          aws-region: "us-east-1"

      - name: Push docker-compose to S3 bucket
        run: aws s3 cp docker-compose.yml s3://nestpi-deploy/

      - name: Create new Beanstalk version from docker-compose
        run: |
          aws elasticbeanstalk create-application-version \
          --application-name nestpi \
          --source-bundle S3Bucket="nestpi-deploy",S3Key="docker-compose.yml" \
          --version-label "ver-${{github.sha}}" \
          --description "commit-sha-${{github.sha}}"

      - name: Deploy new version to Beanstalk
        run: |
          aws elasticbeanstalk update-environment \
          --environment-name Nestpi-env-1 \
          --version-label "ver-${{github.sha}}"
